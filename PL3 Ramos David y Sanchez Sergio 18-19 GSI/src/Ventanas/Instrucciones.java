/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

/**
 *
 * @author David Ramos y Sergio Sánchez
 * Esta ventana muestra los conceptos básicos del juego
 */
public class Instrucciones extends javax.swing.JFrame {

    private Tablerojframe partida;

    /**
     *Constructor
     * @param tf es un objeto que guarda el estado de la ventana Tablerojframe.java
     */
    public Instrucciones(Tablerojframe tf) {
        partida= tf;
        partida.setVisible(false);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButtonVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Instrucciones");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("OBJETIVO DEL JUEGO:\nEl objetivo del juego es eliminar a todos los \nzombies evitando que lleguen al final del ta-\nblero. Si un zombie llega al final del tablero\npierdes la partida.\n\nMECANICAS:\nSe pueden colocar plantas en todas las casilla\nexceptuando en la última columna. Para colocar \nuna planta, el jugador deberá seleccionar la \ncasilla donde desee colocar la planta y aconti-\nnuación seleccionar el tipo de planta que se \ndesee colocar. Solo se podran poner plantas si \nse disponen de los suficientes soles. Los \nzombies apareceran de forma aleatoria en la \nprimera columna de la izquierda y avanzaran al \npasar turno.\n\nPERSONAJES:\nPlantas:\nGirasoles: proporcionan soles cada 2 turnos.\nLanzaguisantes: hace daño al primer zombie que se encuente en su fila.\nNuez: solo puede recibir golpes.\nPetacereza: explota haciendo daño a su alrededor.\nColboxeadora: inflinge daño en horizontal a dos de distancia.\nFrutaestrella: hace daño a todos los enemigos de una fila\n\t\nZombies:\nZombie Comun: tiene 5 de vida, hace 1 de daño y se mueve cada 2 turnos.\nZombie Caracubo: tiene 8 de vida, hace 1 de daño y se mueve cada 4 turnos.\nZombie Deportista: tiene 2 de vida, hace 1 de daño y se mueve cada turno.\nZombie Pistolero: tiene 3 de vida, hace 1 de daño, se mueve cada turno, ataca a 3 de distancia.\nZombie Grandullon: tiene 20 de vida, hace 3 de daño y se mueve cada 5 turnos.");
        jScrollPane1.setViewportView(jTextArea1);

        jButtonVolver.setFont(new java.awt.Font("MV Boli", 1, 12)); // NOI18N
        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(jButtonVolver)
                .addGap(0, 274, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonVolver)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        this.setVisible(false);
        partida.setVisible(true);
        
    }//GEN-LAST:event_jButtonVolverActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
